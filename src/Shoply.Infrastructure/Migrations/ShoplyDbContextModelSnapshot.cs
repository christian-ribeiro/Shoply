// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shoply.Infrastructure.Persistence.EFCore.Context;

#nullable disable

namespace Shoply.Infrastructure.Migrations
{
    [DbContext(typeof(ShoplyDbContext))]
    partial class ShoplyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_marca");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("documento");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("primeiro_nome");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sobrenome");

                    b.Property<int>("PersonType")
                        .HasColumnType("int")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id")
                        .HasName("pk_cliente");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.CustomerAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AddressType")
                        .HasColumnType("int")
                        .HasColumnName("tipo_endereco");

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<string>("Complement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bairro");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("numero");

                    b.Property<string>("Observation")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("observacao");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("PublicPlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Reference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("referencia");

                    b.HasKey("Id")
                        .HasName("pk_endereco_cliente");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("CustomerId");

                    b.ToTable("endereco_cliente", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.MeasureUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_unidade_medida");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.ToTable("unidade_medida", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BarCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("codigo_barras");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_marca");

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo");

                    b.Property<decimal>("CostValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_custo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descricao");

                    b.Property<decimal>("Markup")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("markup");

                    b.Property<long>("MeasureUnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_unidade_medida");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_categoria_produto");

                    b.Property<decimal>("SaleValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_venda");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_produto");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("MeasureUnitId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.ProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_categoria_produto");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.ToTable("categoria_produto", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.ProductImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<decimal>("FileLength")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tamanho_arquivo");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_arquivo");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_imagem");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_produto");

                    b.HasKey("Id")
                        .HasName("pk_imagem_produto");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("imagem_produto", (string)null);
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<long?>("ChangeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_alteracao");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<long?>("CreationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_criacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email");

                    b.Property<int>("Language")
                        .HasColumnType("int")
                        .HasColumnName("idioma");

                    b.Property<Guid?>("LoginKey")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("chave_login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("senha");

                    b.Property<string>("PasswordRecoveryCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo_recuperacao_senha");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("refresh_token");

                    b.HasKey("Id")
                        .HasName("pk_usuario");

                    b.HasIndex("ChangeUserId");

                    b.HasIndex("CreationUserId");

                    b.ToTable("usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "default@shoply.com",
                            Language = 0,
                            Name = "Usuario Padrão",
                            Password = "$2a$11$252h2vGrxOa1D/ZO.SCreeO3NWC4cSzKJlF.dyzxIQlbJ24ooULO2"
                        });
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Brand", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserBrand")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_marca_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserBrand")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_marca_id_usuario_criacao");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Customer", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserCustomer")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_cliente_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserCustomer")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_cliente_id_usuario_criacao");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.CustomerAddress", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserCustomerAddress")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_endereco_cliente_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserCustomerAddress")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_endereco_cliente_id_usuario_criacao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Customer", "Customer")
                        .WithMany("ListCustomerAddress")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_endereco_cliente_id_cliente");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.MeasureUnit", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserMeasureUnit")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_unidade_medida_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserMeasureUnit")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_unidade_medida_id_usuario_criacao");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Product", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Brand", "Brand")
                        .WithMany("ListProduct")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_produto_id_marca");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserProduct")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_produto_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserProduct")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_produto_id_usuario_criacao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.MeasureUnit", "MeasureUnit")
                        .WithMany("ListProduct")
                        .HasForeignKey("MeasureUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_produto_id_unidade_medida");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.ProductCategory", "ProductCategory")
                        .WithMany("ListProduct")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_produto_id_categoria_produto");

                    b.Navigation("Brand");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");

                    b.Navigation("MeasureUnit");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.ProductCategory", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserProductCategory")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_categoria_produto_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserProductCategory")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_categoria_produto_id_usuario_criacao");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.ProductImage", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserProductImage")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fkey_imagem_produto_id_usuario_criacao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Product", "Product")
                        .WithMany("ListProductImage")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_imagem_produto_id_produto");

                    b.Navigation("CreationUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", b =>
                {
                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "ChangeUser")
                        .WithMany("ListChangeUserUser")
                        .HasForeignKey("ChangeUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_usuario_id_usuario_alteracao");

                    b.HasOne("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", "CreationUser")
                        .WithMany("ListCreationUserUser")
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fkey_usuario_id_usuario_criacao");

                    b.Navigation("ChangeUser");

                    b.Navigation("CreationUser");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Brand", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Customer", b =>
                {
                    b.Navigation("ListCustomerAddress");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.MeasureUnit", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.Product", b =>
                {
                    b.Navigation("ListProductImage");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.ProductCategory", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("Shoply.Infrastructure.Persistence.EFCore.Entity.Module.Registration.User", b =>
                {
                    b.Navigation("ListChangeUserBrand");

                    b.Navigation("ListChangeUserCustomer");

                    b.Navigation("ListChangeUserCustomerAddress");

                    b.Navigation("ListChangeUserMeasureUnit");

                    b.Navigation("ListChangeUserProduct");

                    b.Navigation("ListChangeUserProductCategory");

                    b.Navigation("ListChangeUserUser");

                    b.Navigation("ListCreationUserBrand");

                    b.Navigation("ListCreationUserCustomer");

                    b.Navigation("ListCreationUserCustomerAddress");

                    b.Navigation("ListCreationUserMeasureUnit");

                    b.Navigation("ListCreationUserProduct");

                    b.Navigation("ListCreationUserProductCategory");

                    b.Navigation("ListCreationUserProductImage");

                    b.Navigation("ListCreationUserUser");
                });
#pragma warning restore 612, 618
        }
    }
}
